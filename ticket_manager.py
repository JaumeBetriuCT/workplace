from memory_chat_utils.visualizer_utils import ticket_visualizer, show_recommended_tickets, get_role
from PIL import Image
from memory_chat_utils.create_plots import create_plots

import streamlit as st

def ticket_manager(name, username):

    CT_logo = Image.open("images/CT.png")
    st.title("AI ticket manager assistant")
    st.write("Powered by:")
    st.image(CT_logo)

    assistant_logo = Image.open("images/robot_logo.png")

    tab = st.selectbox(
        'Select the tab',
        ('Ticket analyser', 'Dashboard')
    )

    if tab == "Ticket analyser":
        st.title("Ticket manager assistant")
        role, subrole = get_role(username)

        col1, col2 = st.columns(2)

        with col2:
            ticket_visualizer(role)

        with col1:
            analyze_tickets = st.button("Analyse tickets")
            analyze_suggest_tickets = st.button("Analyse and suggest solutions")
            st.info("Suggestions are generated by the model GPT-3.5 using the internal knowledge database.")

            if (not analyze_tickets) & (not analyze_suggest_tickets):
                with st.chat_message("user", avatar=assistant_logo):
                    st.subheader(f"Hello {name}. \n Your role is: **{subrole}**")

            if (analyze_tickets) | (analyze_suggest_tickets):
                with st.chat_message("user", avatar=assistant_logo):
                    st.subheader(f"Hello {name}. \n Your role is: **{subrole}**")
                with st.chat_message("user", avatar=assistant_logo):
                    st.subheader(f"This is the analysis of the unsolved tickets that might be of interest to you:")
                
                show_recommended_tickets(role=role, subrole=subrole, suggest=analyze_suggest_tickets)

    if tab == "Dashboard":
        st.title(f"Statistics for {name}")

        create_plots()

if __name__ == "__main__":
    ticket_manager()